{
  "openapi": "3.0.0",
  "paths": {
    "/auth/user/create-deletion-token": {
      "post": {
        "operationId": "AuthUserController_createDeletionToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/auth/authenticate": {
      "post": {
        "operationId": "AuthController_generateAccessToken",
        "parameters": [
          {
            "name": "gyra-client-secret",
            "in": "header",
            "description": "client secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gyra-client-id",
            "in": "header",
            "description": "client id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/integration/credential": {
      "post": {
        "operationId": "CredentialController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integration/credential"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "get": {
        "operationId": "CredentialController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integration/credential"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/integration/credential/{id}": {
      "get": {
        "operationId": "CredentialController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integration/credential"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "put": {
        "operationId": "CredentialController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integration/credential"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      },
      "delete": {
        "operationId": "CredentialController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integration/credential"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/webhook": {
      "post": {
        "operationId": "WebhookController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/findBy": {
      "get": {
        "operationId": "WebhookController_find",
        "parameters": [
          {
            "name": "webhookId",
            "required": false,
            "in": "query",
            "description": "Webhook Id, If you do not add the webhookId, the organizationId extracted from the token is used as a search.",
            "schema": {
              "example": "664b63037707171ba58cf311",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/{id}": {
      "delete": {
        "operationId": "WebhookController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Webhook Id",
            "schema": {
              "example": "664b63037707171ba58cf311",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/report/section/{id}": {
      "get": {
        "operationId": "SectionController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report": {
      "post": {
        "operationId": "ReportController_create",
        "parameters": [
          {
            "name": "front",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/list": {
      "get": {
        "operationId": "ReportController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/count": {
      "get": {
        "operationId": "ReportController_count",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/export/{id}": {
      "get": {
        "operationId": "ReportController_export",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/{id}": {
      "get": {
        "operationId": "ReportController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tabType",
            "required": false,
            "in": "query",
            "description": "Report type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "required": false,
            "in": "query",
            "description": "Para remover os detalhes da seção, defina como `false`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/{id}/section/{sectionType}": {
      "get": {
        "operationId": "ReportController_getReportSection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionType",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/{id}/financial-tab": {
      "post": {
        "operationId": "ReportController_financialSection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/analyze": {
      "post": {
        "operationId": "ReportController_analyze",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/re-analyze": {
      "post": {
        "operationId": "ReportController_reAnalyze",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/save-product": {
      "post": {
        "operationId": "ReportController_saveProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/report/heal": {
      "post": {
        "operationId": "ReportController_heal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HealDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "report"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/credit-policy/policy": {
      "get": {
        "operationId": "PolicyController_find",
        "parameters": [
          {
            "name": "enabled",
            "required": false,
            "in": "query",
            "description": "Enabled policies",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "protected",
            "required": false,
            "in": "query",
            "description": "Include protected policies",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "credit-policy/policy"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/credit-policy/policy/percentages": {
      "get": {
        "operationId": "PolicyController_policyResultPercentages",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "credit-policy/policy"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/credit-policy/policy/who-can-edit-report": {
      "get": {
        "operationId": "PolicyController_getEditReportAccess",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "credit-policy/policy"
        ]
      }
    },
    "/credit-policy/policy/all/{id}": {
      "put": {
        "operationId": "PolicyController_saveBatchPolicy",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBatchPolicyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "credit-policy/policy"
        ]
      }
    },
    "/credit-policy/product": {
      "get": {
        "operationId": "ProductController_getProductTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "credit-policy/product"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/health/all": {
      "get": {
        "operationId": "HealthController_checkAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/insight": {
      "post": {
        "operationId": "InsightController_generateInsight",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateInsightDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "insight"
        ]
      }
    },
    "/insight/review": {
      "post": {
        "operationId": "InsightController_reviewInsight",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewInsightDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "insight"
        ]
      }
    }
  },
  "info": {
    "title": "GYRA+ API Documentation",
    "description": "Documentação da API da GYRA+",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "authorization": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token"
      }
    },
    "schemas": {
      "DeleteTokenDto": {
        "type": "object",
        "properties": {}
      },
      "CreateDto": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "policyId",
          "document",
          "type"
        ]
      },
      "EditDto": {
        "type": "object",
        "properties": {}
      },
      "WebhookTypeEnum": {
        "type": "string",
        "description": "Type Webhook",
        "enum": [
          "REPORT",
          "OPTIN",
          "CREDIT_POLICY",
          "REPORT_STATUS",
          "REPORT_FINISHED"
        ]
      },
      "CreateWebhookDto": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookTypeEnum"
          },
          "url": {
            "type": "string",
            "description": "The URL for the webhook",
            "example": "https://webhook-test.com/a0a7aadb8de3e"
          },
          "apiKey": {
            "type": "string",
            "description": "API Key para uma requisição autenticada (será enviado como `api-key` em headers)",
            "example": "xxx-xxx-xxx"
          }
        },
        "required": [
          "type",
          "url",
          "apiKey"
        ]
      },
      "AnalyzeDto": {
        "type": "object",
        "properties": {}
      },
      "SaveProductDto": {
        "type": "object",
        "properties": {}
      },
      "HealDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ParamsSettingDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "SaveBatchRuleSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParamsSettingDto"
            }
          },
          "typeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "params",
          "typeRuleId"
        ]
      },
      "SaveBatchRuleSettingJoinDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "statusToApply": {
            "type": "string"
          },
          "operationType": {
            "type": "string"
          },
          "policyRuleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBatchRuleSettingDto"
            }
          }
        },
        "required": [
          "id",
          "statusToApply",
          "operationType",
          "policyRuleSettings"
        ]
      },
      "SaveBatchGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scoreApproved": {
            "type": "number"
          },
          "scoreAlert": {
            "type": "number"
          },
          "scoreDenied": {
            "type": "number"
          },
          "policyId": {
            "type": "string"
          },
          "policyRuleSettingJoins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBatchRuleSettingJoinDto"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "name",
          "scoreApproved",
          "scoreAlert",
          "scoreDenied",
          "policyId",
          "policyRuleSettingJoins"
        ]
      },
      "SaveBatchRiskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "from": {
            "type": "number"
          },
          "to": {
            "type": "number"
          },
          "removed": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "from",
          "to",
          "removed"
        ]
      },
      "SaveBatchIntegrationGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "bureauType": {
            "type": "string"
          },
          "hasSCR": {
            "type": "boolean"
          },
          "externalIntegrationEnabled": {
            "type": "boolean"
          },
          "externalIntegrationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "SaveBatchPolicyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scoreEnabled": {
            "type": "boolean"
          },
          "useResultToReport": {
            "type": "boolean"
          },
          "integrationGroupName": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "policyRuleGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBatchGroupDto"
            }
          },
          "risks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveBatchRiskDto"
            }
          },
          "integrationGroup": {
            "$ref": "#/components/schemas/SaveBatchIntegrationGroup"
          },
          "productTypeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "userId",
          "name",
          "scoreEnabled",
          "useResultToReport",
          "integrationGroupName",
          "documentType",
          "policyRuleGroups",
          "risks",
          "integrationGroup",
          "productTypeId"
        ]
      },
      "GenerateInsightDto": {
        "type": "object",
        "properties": {}
      },
      "ReviewInsightDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}